name: Release and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install vsce
        run: npm i -g @vscode/vsce

      - name: Verify tag matches package.json version
        id: verify
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION="$(node -p "require('./package.json').version")"
          echo "Version: $VERSION"
          echo "Tag: $TAG"
          if [ "v$VERSION" != "$TAG" ]; then
            echo "Tag $TAG does not match package.json version v$VERSION" >&2
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Package VSIX
        run: vsce package --no-dependencies

      - name: Resolve VSIX path
        id: vsix
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=${{ steps.verify.outputs.version }}
          FILE="$NAME-$VERSION.vsix"
          if [ ! -f "$FILE" ]; then
            FILE=$(ls -1 *.vsix | head -n1)
          fi
          echo "VSIX: $FILE"
          echo "file=$FILE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.verify.outputs.tag }}
          name: ${{ steps.verify.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.vsix.outputs.file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to VS Code Marketplace
        run: |
          if [ -n "${{ secrets.VSCE_PAT }}" ]; then
            echo "Publishing to VS Code Marketplace"
            vsce publish -p "${{ secrets.VSCE_PAT }}"
          else
            echo "VSCE_PAT not set; skipping marketplace publish"
          fi
